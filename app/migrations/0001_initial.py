# Generated by Django 5.0 on 2024-02-07 03:32

import app.managers
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactRequest',
            fields=[
                ('requestID', models.CharField(max_length=6, primary_key=True, serialize=False, verbose_name='request ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='first name')),
                ('last_name', models.CharField(max_length=50, verbose_name='last name')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('message', models.TextField(verbose_name='message')),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('hotelID', models.CharField(max_length=6, primary_key=True, serialize=False, verbose_name='hotel ID')),
                ('name', models.CharField(max_length=100, verbose_name='hotel name')),
                ('description', models.TextField(verbose_name='description')),
                ('location', models.CharField(max_length=255, verbose_name='location')),
                ('facilities', models.CharField(max_length=255, verbose_name='facilities')),
                ('contact', models.CharField(max_length=10, unique=True, verbose_name='contact no')),
                ('website_url', models.URLField(verbose_name='website URL')),
                ('rating', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=1, verbose_name='ratings')),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('placeID', models.CharField(max_length=6, primary_key=True, serialize=False, verbose_name='place ID')),
                ('name', models.CharField(max_length=100, verbose_name='place name')),
                ('description', models.TextField(verbose_name='description')),
                ('location', models.CharField(max_length=255, verbose_name='location')),
                ('rating', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=1, verbose_name='ratings')),
                ('map_url', models.URLField(verbose_name='map URL')),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('username', models.CharField(max_length=50, unique=True, verbose_name='username')),
                ('first_name', models.CharField(max_length=100, verbose_name='first name')),
                ('last_name', models.CharField(max_length=100, verbose_name='last name')),
                ('birth_date', models.DateField(null=True, verbose_name='date of birth')),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female')], max_length=10, verbose_name='gender')),
                ('city', models.CharField(max_length=100, verbose_name='city')),
                ('contact', models.CharField(max_length=10, unique=True, verbose_name='contact no')),
                ('pincode', models.CharField(default='380009', max_length=6, verbose_name='pincode')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', app.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='HotelImage',
            fields=[
                ('imageID', models.CharField(max_length=6, primary_key=True, serialize=False, verbose_name='image ID')),
                ('image', models.ImageField(upload_to='images/', verbose_name='image')),
                ('description', models.TextField(verbose_name='image description')),
                ('date_added', models.DateField(auto_now_add=True)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.hotel')),
            ],
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('packageID', models.CharField(max_length=6, primary_key=True, serialize=False, verbose_name='package ID')),
                ('name', models.CharField(max_length=100, verbose_name='package name')),
                ('description', models.TextField(verbose_name='description')),
                ('journey_start_date', models.DateField()),
                ('duration', models.CharField(max_length=50, verbose_name='duration')),
                ('meals', models.CharField(max_length=50, verbose_name='meals')),
                ('inclusions', multiselectfield.db.fields.MultiSelectField(choices=[('Guided city tours', 'Guided city tours'), ('Adventure excursions (hiking, zip-lining)', 'Adventure excursions (hiking, zip-lining)'), ('Relaxing spa day', 'Relaxing spa day'), ('Water sports (snorkeling, kayaking)', 'Water sports (snorkeling, kayaking)'), ('Attend a traditional dance or music performance', 'Attend a traditional dance or music performance'), ('Visit local museums and art galleries', 'Visit local museums and art galleries'), ('Explore historical landmarks and monuments', 'Explore historical landmarks and monuments'), ('Private chauffeur service', 'Private chauffeur service'), ('Local public transportation pass', 'Local public transportation pass'), ('Group guided bus tours', 'Group guided bus tours'), ('Rental car for self-exploration', 'Rental car for self-exploration'), ('Photography or language guide services', 'Photography or language guide services'), ('Scuba diving to explore underwater life', 'Scuba diving to explore underwater life'), ('Jet skiing or parasailing', 'Jet skiing or parasailing'), ('Snorkeling in crystal-clear waters', 'Snorkeling in crystal-clear waters'), ('Snow or water skiing adventures', 'Snow or water skiing adventures'), ('Mountain biking or cycling tours', 'Mountain biking or cycling tours')], max_length=255, verbose_name='inclusions items')),
                ('max_travelers', models.IntegerField(verbose_name='no of travelers are allowed')),
                ('is_cancelable', models.BooleanField(default=False, verbose_name='cancelable')),
                ('date_added', models.DateField(auto_now_add=True)),
                ('hotels', models.ManyToManyField(to='app.hotel')),
                ('places', models.ManyToManyField(to='app.place')),
            ],
        ),
        migrations.CreateModel(
            name='PlaceImage',
            fields=[
                ('imageID', models.CharField(max_length=6, primary_key=True, serialize=False, verbose_name='image ID')),
                ('image', models.ImageField(upload_to='images/', verbose_name='image')),
                ('description', models.TextField(verbose_name='image description')),
                ('date_added', models.DateField(auto_now_add=True)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.place')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('reviewID', models.CharField(max_length=6, primary_key=True, serialize=False, verbose_name='review ID')),
                ('rating', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=1, verbose_name='ratings')),
                ('comment', models.CharField(max_length=200, verbose_name='comment')),
                ('date_posted', models.DateField(auto_now_add=True)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.package')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Traveler',
            fields=[
                ('travelerID', models.CharField(max_length=6, primary_key=True, serialize=False, verbose_name='traveler ID')),
                ('name', models.CharField(max_length=100, verbose_name='full name')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female')], max_length=10, verbose_name='gender')),
                ('contact', models.CharField(max_length=10, unique=True, verbose_name='contact no')),
                ('birth_date', models.DateField(verbose_name='date of birth')),
                ('date_added', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='review',
            constraint=models.UniqueConstraint(fields=('user', 'package'), name='unique_user_package_review'),
        ),
    ]
